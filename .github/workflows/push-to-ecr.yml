name: Push to ECR

on:
  push:
    branches:
      - main

env:
  ECR_REGISTRY: 371410071971.dkr.ecr.us-west-2.amazonaws.com
  AWS_REGION: us-west-2

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and tag Docker image
        run: |
          docker build -t $ECR_REGISTRY/lambda-weather-img:staging .
          docker tag $ECR_REGISTRY/lambda-weather-img:staging $ECR_REGISTRY/lambda-weather-img:staging

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REGISTRY/lambda-weather-img:staging

      - name: Create Lambda function for testing
      # configure Timeout to 5 minutes
        run: |
          aws lambda create-function \
          --function-name daily-weather-staging \
          --package-type Image \
          --role "arn:aws:iam::371410071971:role/lamba-weather-role" \
          --code ImageUri=$ECR_REGISTRY/lambda-weather-img:staging \
          --timeout 30 \
          --memory-size 128

      - name: add environment variables
        run: |
          aws lambda update-function-configuration \
          --function-name daily-weather-staging \
          --environment Variables={OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }},EMAIL_ADDRESS=${{ secrets.EMAIL_ADDRESS }}}

      - name: Test Lambda
        run: |
          aws lambda invoke --function-name daily-weather-staging --payload '{}' output.json
          cat output.json
          grep -q '"errorMessage"' output.json && exit

  # - name: Deploy to AWS Lambda
  #   run: |
  #     aws lambda update-function-code --function-name daily-weather --image-uri $ECR_REGISTRY/lambda-weather-img:latest

  # - name: Test Lambda
  #   run: |
  #     aws lambda invoke --function-name daily-weather --payload '{}' output.json
  #     cat output.json
  #     grep -q '"errorMessage"' output.json && exit


